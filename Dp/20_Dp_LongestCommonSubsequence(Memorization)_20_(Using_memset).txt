#include <bits/stdc++.h>
using namespace std;



int static dp[1000][1001];   // Intializing dp[1000][1001];




int LongestCommonSubSeq(string x , string y , int n , int m ){
    
    
        if(n==0 || m==0){
            return 0;
        }
        
        
        if(dp[n][m] !=-1){
            return dp[n][m];
        }
            
            
            if(x[n-1] == y[m-1]){
                
                    dp[n][m]=  1+ LongestCommonSubSeq(x , y , n-1 ,  m-1 );
                
                return  1+ LongestCommonSubSeq(x , y , n-1 ,  m-1 );
            }
    
      
            else {
               
                dp[n][m]=  max( LongestCommonSubSeq(x , y , n-1 ,  m ) ,  LongestCommonSubSeq(x , y , n ,  m-1 ) ) ;
            
                return max( LongestCommonSubSeq(x , y , n-1 ,  m ) ,  LongestCommonSubSeq(x , y , n ,  m-1 ) ) ;
            }


    return 0;
    
}


int main()
{
    
    memset(dp , -1 , sizeof(dp));               // insider function , 1st - array , 2nd - to whom value with intialized  (Only 0 Or -1 ) , sizeof(array) )    
    
    // It will intialized the dp array (2d array ) , with -1 
    
    
    
    
//   string x="abcdefgh";
//                                 // ans =1 
//   string y="zxlkihjh";
  
  
  
  
  string x="abcdefgh";
                        //   x,y,n-1,m
  string y="abcgz";
      
      
   int n=x.length();
   int m=y.length();
   
   
   cout<<LongestCommonSubSeq(x, y , n , m);        // No need of passing dp // bcz intialized global , and value's are changing globaly 
   
    return 0;
}


