/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
C#, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <bits/stdc++.h>
using namespace std;


 


void CoinChangeMaxWays( int coin[] , int row , int col , int **dp){
    
    
    for(int i=0;i<row;i++){
        
        for(int j=0;j<col;j++){
            
            
            // Intialization explained on noteebook ,, i=0 j=0 , 1   ,, i=0 ans =0 ,, j=1 ans =1  ,,
            
            if(i==0 && j==0){
                dp[i][j]=1;
            }
            
            else if(i==0){
                dp[i][j]=0;
            }
            
            else if(j==0){
                dp[i][j]=1;
            }
            
            
            
            
            
            else{
                
                
                
                /*
                max (conc,notConc)  removed ,, (max removed ,, and + added betwen them )
                
                new ans = conc + notConc
                
                */
                
                int conc=0;
                
                if( j - coin[i-1] >= 0){
                    
                    conc = dp[i][ j - coin[i-1] ];   
                    
                }
               
               
                
                int notConc=dp[i-1][j];
                
                
                int ans = conc+notConc;
                
                
                dp[i][j]=ans;
                
            }
            
            
        }    // col for loop
    
        
    }   // for row loop
    
    
    
    
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
           
           cout<<dp[i][j]<<" ";
           
        }
        
        cout<<endl;
    }
    
    
}







int main()
{
    
    
   
      int n=3;
    
    int sum=5;    // Bag Capacity  ... 
    
    
    int coin[n]={1,2,3};
    
    
    
    
    
    
    int** dp = new int*[n+1];
  
    
    for (int i = 0; i < n+1; i++){
         
         dp[i] = new int[sum+1];    // for every row set , Bcap+1  cols    or  2d array[n+1][Bcap+1];
         
    }
    
    
    
     CoinChangeMaxWays(coin, n+1 , sum+1 , dp );
    
    // The last ,array[row][col] = Final Ans 
    
}


