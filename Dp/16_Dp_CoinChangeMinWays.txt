#include <bits/stdc++.h>
using namespace std;





void CoinChangeMinWays( int coin[] , int row , int col , int **dp){
    
    
    for(int i=0;i<row;i++){
        
        for(int j=0;j<col;j++){
            
            
            // Intialization explained on noteebook ,, i=0 j=0 , 1   ,, i=0 ans =0 ,, j=1 ans =1  ,,
            
            if(i==0 && j==0){
                dp[i][j]=INT_MAX-1;
            }
            
            else if(i==0){
                dp[i][j]=INT_MAX-1;
            }
            
            else if(j==0){
                dp[i][j]=0;
            }
            
            
            
            
            
            else{
                
                
                /*
                
                int ans=INT_MAX-1;
                
                
                if( j % coin[i-1]  == 0){
                    
                    ans = j / coin[i-1];
                    
                    
                }
             
             
                dp[i][j]=ans;
                
                */
                
                
                
                if(coin[i-1] <= j ) {
                    dp[i][j]=min((1+dp[i][ j-coin[i-1] ] ) , dp[i-1][j]);
                }
                
                else{
                    dp[i][j]=dp[i-1][j];
                }
                
                
                
                
                
            }
            
        }    // col for loop
    
        
    }   // for row loop
    
    
    
    
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
           
           cout<<dp[i][j]<<" ";
           
        }
        
        cout<<endl;
    }
    
    
}
















int main()
{
    
    
    
    
    
    
    
               // Using Top Down 
    
    
      int n=3;
    
    int sum=5;    // Bag Capacity  ... 
    
    
    int coin[n]={3,4,5};
    
    
    
    
    
    
    int** dp = new int*[n+1];
  
    
    for (int i = 0; i < n+1; i++){
         
         dp[i] = new int[sum+1];    // for every row set , Bcap+1  cols    or  2d array[n+1][Bcap+1];
         
    }
    
    
    
     CoinChangeMinWays(coin, n+1 , sum+1 , dp ); 
     
     
    
    // The last ,array[row][col] = Final Ans 
    
    
    return 0;
}






