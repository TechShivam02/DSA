#include <bits/stdc++.h>
using namespace std;




void CountSubset(int array[] , int row , int col , int ** dp){
    
    
    int sum=col-1;
    
    
    for(int i=0;i<row;i++){
        
        for(int j=0;j<col;j++){
            
            
            if( (i==0 && j==0)  || (j==0) ) {
               
                dp[i][j]=1;
            }
            
            else if(i==0){
                
                dp[i][j]=0;
            }
            
            
            
            else{
                
                if(j-array[i-1] < 0 ){
                    dp[i][j]=dp[i-1][j];    // prevoius row same col 
                    
                }
                
                else if( j-array[i-1] == 0  || j-array[i-1] >0){
                    dp[i][j]=dp[i-1][j] + dp[i-1][j-array[i-1]];   // prev row  same col   + prev row ,col= j-curr ele
                }
                
                
                
                
                
            }
            
        }
        
        
        
        
    }
    
    
    
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
        
    }
}




int main()
{
    
    
   
   
    
    
     int array[]={1,1,2,3};
     
     int diff=1;
     
     
     
    
    
     int n=sizeof(array)/sizeof(array[0]);      
    
    
    int sumarr=0;
    
    
    for(int i=0;i<n;i++){
        sumarr+=array[i];
    }
    
    int sum = (diff + sumarr) /2 ;    //     sum =4  // for s1  number of subsets whose sum is 4  // = 3 // also for s2 ans = 3 
    // eightther for s1  Or s2  ans = same   
    
    
    
    // only 1 line Code     94  line    // rest all  code of countsubsetsum
    
    
    
    
    
    
    
    /*
      
              1 2 3 4
    1      1
    2      1
    3      2
    4      3       Ans 
    
    */
    
    
    
    
    int** dp = new int*[n+1];
  
    
    for (int i = 0; i < n+1; i++){
         
         dp[i] = new int[sum+1];    // for every row set , sum+1  cols    or  2d array[n+1][Bcap+1];
         
    }
    
    
    
    
    
    
    for(int i=0;i<sum+1;i++){
        cout<<i<<" ";
    }
    
    
    cout<<endl<<endl;
    
    
    
    
    
    /*
    
    n+1 = rows , sum+1 = col  
    
      0    1  2  3  4  5  6  7  8  9  10
    
0    

2    1
3    2
5    3
6    4
8    5
9    6

   Index
   
   */
   
   
    CountSubset(array, n+1 , sum+1 , dp );  // 7   11
    
    
    

    return 0;
}



