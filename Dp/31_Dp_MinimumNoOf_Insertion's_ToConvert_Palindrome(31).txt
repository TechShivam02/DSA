

#include <bits/stdc++.h>
using namespace std;


int LongestCommonSubSeq(string x , string y , int n , int m ){
    
    
        if(n==0 || m==0){
            return 0;
        }
        
            
            
            if(x[n-1] == y[m-1]){
                return  1+ LongestCommonSubSeq(x , y , n-1 ,  m-1 );
            }
    
      
            else {
                
                return max( LongestCommonSubSeq(x , y , n-1 ,  m ) ,  LongestCommonSubSeq(x , y , n ,  m-1 ) ) ;
            }


    return 0;
    
}


int main()
{
   
  string str1="AEBCBDA";    // given only 
  
  
  
  string temp=str1;
  
             
                reverse(str1.begin() , str1.end());     
                
               
               string str2=str1;    
               
               
               
               str1=temp;
               
               
               int m=str1.length();
               int n=str2.length();
               
               
               int L_P_S=LongestCommonSubSeq(str1, str2 , m , n);
               
   
   
   
   
  cout<<"Minimum no Of Deletion's to Make it Palindrome : "<<m-L_P_S<<endl;
  
  
  
   
   // 1  line 72 .... , No Code  
  
  
  int FinalAns = m-L_P_S;     // Same , As Equal to min no of insertions = min no of Deletion's
  
 
  cout<<"Minimum no Of Insertion's to Make it Palindrome : "<<FinalAns<<endl;
   
   
   
   
   
   
   
   
    return 0;
}





