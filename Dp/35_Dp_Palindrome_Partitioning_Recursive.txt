#include <bits/stdc++.h>
using namespace std;

bool isPalindrome(string String, int i, int j)
{
    while(i < j)
    {
      if(String[i] != String[j])
        return false; 
      i++;
      j--;
    }
    return true;
}

int PalindromePartitions(string s, int i, int j)
{
    if (i >= j){
        return 0;
    }
    
    if( isPalindrome(s,i,j) ){
        return 0;
    }
    
    
      
      int ans = INT_MAX;
      
        
    
    
    
    for (int k = i; k < j; k++)
    {
        int temp = PalindromePartitions(s, i, k) + PalindromePartitions(s, k + 1, j) + 1 ;
 
      ans=min(ans,temp);
      
    }
 
 
    return ans;
}


int main()
{
    
    // string str = "nitin";  // Itself a Plaindrome   ,, ans = 0 
    
 string str = "aadfaa";        //       aa | d | f | aa    3 Cuts ...
    
    // string str = "nitik";        //     n | iti | k       2  Cuts ...
    
    
   
    cout << "Min cuts needed for Palindrome Partitioning is  : " <<   PalindromePartitions(str, 0, str.length() - 1) << endl;
    
    




   return 0;
}

